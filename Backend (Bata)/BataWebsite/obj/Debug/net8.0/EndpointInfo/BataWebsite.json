{
  "openapi": "3.0.1",
  "info": {
    "title": "BataWebsite",
    "version": "1.0"
  },
  "paths": {
    "/api/Admin/register": {
      "post": {
        "tags": [
          "Admin"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Admin"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Admin"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Admin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/login": {
      "post": {
        "tags": [
          "Admin"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Admin"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Admin"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Admin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/profile": {
      "get": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/google-login": {
      "post": {
        "tags": [
          "Admin"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { }
            },
            "text/json": {
              "schema": { }
            },
            "application/*+json": {
              "schema": { }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/customers": {
      "get": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/auth": {
      "get": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/customers/{id}": {
      "delete": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/staffs": {
      "get": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/staffs/{id}": {
      "delete": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Cart": {
      "get": {
        "tags": [
          "Cart"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Cart"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Cart/clear": {
      "put": {
        "tags": [
          "Cart"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/CartItem": {
      "get": {
        "tags": [
          "CartItem"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "CartItem"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CartItem"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CartItem"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CartItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/CartItem/{id}": {
      "put": {
        "tags": [
          "CartItem"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CartItem"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CartItem"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CartItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "CartItem"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Category": {
      "get": {
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Category"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCategory"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCategory"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCategory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Category/{id}": {
      "get": {
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCategory"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCategory"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCategory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Delivery/assign": {
      "post": {
        "tags": [
          "Delivery"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "agentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Delivery/update-status/{id}": {
      "put": {
        "tags": [
          "Delivery"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/DeliveryStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Delivery/track/{orderId}": {
      "get": {
        "tags": [
          "Delivery"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/DeliveryAgent/apply": {
      "post": {
        "tags": [
          "DeliveryAgent"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "AvailabilityStatus",
                  "ContactNumber",
                  "Email",
                  "FullName",
                  "NRIC",
                  "PostalCode",
                  "UserId",
                  "VehicleNumber",
                  "VehicleOwnership",
                  "VehicleType"
                ],
                "type": "object",
                "properties": {
                  "FullName": {
                    "type": "string"
                  },
                  "Email": {
                    "type": "string",
                    "format": "email"
                  },
                  "NRIC": {
                    "type": "string"
                  },
                  "UserId": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "ContactNumber": {
                    "type": "string"
                  },
                  "VehicleNumber": {
                    "type": "string"
                  },
                  "VehicleType": {
                    "type": "string"
                  },
                  "AvailabilityStatus": {
                    "type": "boolean"
                  },
                  "PostalCode": {
                    "type": "string"
                  },
                  "VehicleOwnership": {
                    "type": "string"
                  },
                  "OwnerFullName": {
                    "type": "string"
                  },
                  "DriverLicenseFile": {
                    "type": "string",
                    "format": "binary"
                  },
                  "VrcFile": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "FullName": {
                  "style": "form"
                },
                "Email": {
                  "style": "form"
                },
                "NRIC": {
                  "style": "form"
                },
                "UserId": {
                  "style": "form"
                },
                "ContactNumber": {
                  "style": "form"
                },
                "VehicleNumber": {
                  "style": "form"
                },
                "VehicleType": {
                  "style": "form"
                },
                "AvailabilityStatus": {
                  "style": "form"
                },
                "PostalCode": {
                  "style": "form"
                },
                "VehicleOwnership": {
                  "style": "form"
                },
                "OwnerFullName": {
                  "style": "form"
                },
                "DriverLicenseFile": {
                  "style": "form"
                },
                "VrcFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JobApplicant"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobApplicant"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobApplicant"
                }
              }
            }
          }
        }
      }
    },
    "/DeliveryAgent/{id}/approve": {
      "put": {
        "tags": [
          "DeliveryAgent"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproveDeliveryAgentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproveDeliveryAgentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApproveDeliveryAgentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/DeliveryAgent/vehicle-info": {
      "get": {
        "tags": [
          "DeliveryAgent"
        ],
        "parameters": [
          {
            "name": "registrationNumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/DeliveryAgent/jobapplicant/{id}": {
      "get": {
        "tags": [
          "DeliveryAgent"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JobApplicant"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobApplicant"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobApplicant"
                }
              }
            }
          }
        }
      }
    },
    "/DeliveryAgent/{id}/assignorder": {
      "put": {
        "tags": [
          "DeliveryAgent"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignOrderRequestDelivery"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignOrderRequestDelivery"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignOrderRequestDelivery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/DeliveryAgent": {
      "get": {
        "tags": [
          "DeliveryAgent"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryAgentDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryAgentDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryAgentDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/DeliveryAgent/{id}": {
      "get": {
        "tags": [
          "DeliveryAgent"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryAgentDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryAgentDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryAgentDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DeliveryAgent"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/DeliveryPerformance/order/{orderId}/deliver": {
      "put": {
        "tags": [
          "DeliveryPerformance"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/DeliveryPerformance/agent/{agentId}/summary": {
      "get": {
        "tags": [
          "DeliveryPerformance"
        ],
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/File/upload": {
      "post": {
        "tags": [
          "File"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UploadResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadResponse"
                }
              }
            }
          }
        }
      }
    },
    "/FulfilmentStaff/register": {
      "post": {
        "tags": [
          "FulfilmentStaff"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "ContactNumber",
                  "FullName",
                  "JobRoleApplied",
                  "NRIC",
                  "UserId"
                ],
                "type": "object",
                "properties": {
                  "JobRoleApplied": {
                    "maxLength": 50,
                    "type": "string"
                  },
                  "FullName": {
                    "maxLength": 100,
                    "type": "string"
                  },
                  "UserId": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "Email": {
                    "maxLength": 100,
                    "type": "string"
                  },
                  "NRIC": {
                    "maxLength": 12,
                    "type": "string"
                  },
                  "ContactNumber": {
                    "maxLength": 15,
                    "type": "string"
                  },
                  "PreferredAssignedArea": {
                    "maxLength": 50,
                    "type": "string"
                  },
                  "PreferredWarehouse": {
                    "maxLength": 100,
                    "type": "string"
                  },
                  "ResumeFileName": {
                    "maxLength": 255,
                    "type": "string"
                  },
                  "ResumeFile": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "JobRoleApplied": {
                  "style": "form"
                },
                "FullName": {
                  "style": "form"
                },
                "UserId": {
                  "style": "form"
                },
                "Email": {
                  "style": "form"
                },
                "NRIC": {
                  "style": "form"
                },
                "ContactNumber": {
                  "style": "form"
                },
                "PreferredAssignedArea": {
                  "style": "form"
                },
                "PreferredWarehouse": {
                  "style": "form"
                },
                "ResumeFileName": {
                  "style": "form"
                },
                "ResumeFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JobApplicant"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobApplicant"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobApplicant"
                }
              }
            }
          }
        }
      }
    },
    "/FulfilmentStaff/add": {
      "post": {
        "tags": [
          "FulfilmentStaff"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "ContactNumber",
                  "FullName",
                  "JobRoleApplied",
                  "NRIC",
                  "Password"
                ],
                "type": "object",
                "properties": {
                  "JobRoleApplied": {
                    "maxLength": 50,
                    "type": "string"
                  },
                  "FullName": {
                    "maxLength": 100,
                    "type": "string"
                  },
                  "Password": {
                    "maxLength": 100,
                    "type": "string"
                  },
                  "Email": {
                    "maxLength": 100,
                    "type": "string"
                  },
                  "NRIC": {
                    "maxLength": 12,
                    "type": "string"
                  },
                  "ContactNumber": {
                    "maxLength": 15,
                    "type": "string"
                  },
                  "AssignedArea": {
                    "maxLength": 50,
                    "type": "string"
                  },
                  "Warehouse": {
                    "maxLength": 100,
                    "type": "string"
                  },
                  "ResumeFileName": {
                    "maxLength": 255,
                    "type": "string"
                  },
                  "ResumeFile": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "JobRoleApplied": {
                  "style": "form"
                },
                "FullName": {
                  "style": "form"
                },
                "Password": {
                  "style": "form"
                },
                "Email": {
                  "style": "form"
                },
                "NRIC": {
                  "style": "form"
                },
                "ContactNumber": {
                  "style": "form"
                },
                "AssignedArea": {
                  "style": "form"
                },
                "Warehouse": {
                  "style": "form"
                },
                "ResumeFileName": {
                  "style": "form"
                },
                "ResumeFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FulfilmentStaff"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FulfilmentStaff"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FulfilmentStaff"
                }
              }
            }
          }
        }
      }
    },
    "/FulfilmentStaff/{id}/approve": {
      "put": {
        "tags": [
          "FulfilmentStaff"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproveFulfilmentStaffRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproveFulfilmentStaffRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApproveFulfilmentStaffRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/FulfilmentStaff/assignorder/auto": {
      "post": {
        "tags": [
          "FulfilmentStaff"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/FulfilmentStaff/order/{orderId}/pack": {
      "put": {
        "tags": [
          "FulfilmentStaff"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/FulfilmentStaff/order/{orderId}/unpack": {
      "put": {
        "tags": [
          "FulfilmentStaff"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/FulfilmentStaff/{id}": {
      "get": {
        "tags": [
          "FulfilmentStaff"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FulfilmentStaff"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FulfilmentStaff"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FulfilmentStaff"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FulfilmentStaff"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/FulfilmentStaff/{staffId}/orders": {
      "get": {
        "tags": [
          "FulfilmentStaff"
        ],
        "parameters": [
          {
            "name": "staffId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/FulfilmentStaff/jobapplicant/{id}": {
      "get": {
        "tags": [
          "FulfilmentStaff"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JobApplicant"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobApplicant"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobApplicant"
                }
              }
            }
          }
        }
      }
    },
    "/JobApplicant/all": {
      "get": {
        "tags": [
          "JobApplicant"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/JobApplicant/resume/{fileName}": {
      "get": {
        "tags": [
          "JobApplicant"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/JobApplicant/{id}": {
      "put": {
        "tags": [
          "JobApplicant"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobApplicant"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/JobApplicant"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/JobApplicant"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "JobApplicant"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/JobApplicant/{userId}": {
      "get": {
        "tags": [
          "JobApplicant"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/JobApplicant/applicant/{id}": {
      "get": {
        "tags": [
          "JobApplicant"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Order": {
      "post": {
        "tags": [
          "Order"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "Order"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Order/GetOrdersByFulfilmentStaff/{staffId}": {
      "get": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "staffId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Order/unassigned-shipped-orders": {
      "get": {
        "tags": [
          "Order"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Order/GetOrdersByDeliveryAgent/{staffId}": {
      "get": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "staffId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Order/addOrderToDeliveryAgent/{orderId}": {
      "put": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Order/GenerateAWB/{orderId}": {
      "get": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Order/removeOrderFromDeliveryAgent/{orderId}": {
      "put": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Order/GetStaffIdsByAgent/{staffId}": {
      "get": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "staffId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Order/all": {
      "get": {
        "tags": [
          "Order"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Order/ScanAWBBarcode/{barcode}": {
      "put": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "barcode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Order/{id}": {
      "get": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Order/{id}/status": {
      "put": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderStatus"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderStatus"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Payment/process-payment": {
      "post": {
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Product": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Product/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/RedeemedReward": {
      "get": {
        "tags": [
          "RedeemedReward"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RedeemedRewardDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RedeemedRewardDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RedeemedRewardDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "RedeemedReward"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RedeemedRewardRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RedeemedRewardRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RedeemedRewardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RedeemedRewardDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedeemedRewardDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedeemedRewardDTO"
                }
              }
            }
          }
        }
      }
    },
    "/RedeemedReward/{id}": {
      "get": {
        "tags": [
          "RedeemedReward"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RedeemedRewardDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedeemedRewardDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedeemedRewardDTO"
                }
              }
            }
          }
        }
      }
    },
    "/RedeemedReward/{id}/gift": {
      "post": {
        "tags": [
          "RedeemedReward"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GiftRewardRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GiftRewardRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GiftRewardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/RedeemedReward/check-username/{username}": {
      "get": {
        "tags": [
          "RedeemedReward"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Reward": {
      "get": {
        "tags": [
          "Reward"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RewardDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RewardDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RewardDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Reward"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddRewardRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddRewardRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddRewardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RewardDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewardDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewardDTO"
                }
              }
            }
          }
        }
      }
    },
    "/Reward/{id}": {
      "get": {
        "tags": [
          "Reward"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RewardDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewardDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewardDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Reward"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRewardRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRewardRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRewardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Reward"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Staff/register": {
      "post": {
        "tags": [
          "Staff"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Staff"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Staff"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Staff"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Staff/login": {
      "post": {
        "tags": [
          "Staff"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Staff"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Staff"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Staff"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Staff/profile": {
      "get": {
        "tags": [
          "Staff"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Staff/google-login": {
      "post": {
        "tags": [
          "Staff"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { }
            },
            "text/json": {
              "schema": { }
            },
            "application/*+json": {
              "schema": { }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Staff/customers": {
      "get": {
        "tags": [
          "Staff"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Staff/auth": {
      "get": {
        "tags": [
          "Staff"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Staff/customers/{id}": {
      "delete": {
        "tags": [
          "Staff"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Stock": {
      "get": {
        "tags": [
          "Stock"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Stock"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Stock"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Stock"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Stock"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Stock/product/{productId}": {
      "get": {
        "tags": [
          "Stock"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Stock"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Stock"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Stock"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Stock"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Stock/{id}": {
      "delete": {
        "tags": [
          "Stock"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Stock/export": {
      "get": {
        "tags": [
          "Stock"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Stock/import": {
      "post": {
        "tags": [
          "Stock"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/register": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/login": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/profile": {
      "get": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/google-login": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { }
            },
            "text/json": {
              "schema": { }
            },
            "application/*+json": {
              "schema": { }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/set-password": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/update-profile": {
      "put": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/addresses/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/addresses": {
      "get": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Address"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/auth": {
      "get": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/addresses/{addressId}": {
      "put": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Address"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Address"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/delete": {
      "delete": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/update": {
      "put": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/enable-2fa": {
      "post": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/verify-2fa": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OtpVerificationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OtpVerificationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OtpVerificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/verify-otp": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyOtpRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyOtpRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyOtpRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/disable-2fa": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OtpVerificationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OtpVerificationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OtpVerificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/change-password": {
      "put": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/forgot-password": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/reset-password": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Voucher/{id}": {
      "get": {
        "tags": [
          "Voucher"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Voucher"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Voucher"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Voucher"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Voucher"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Voucher"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Voucher": {
      "get": {
        "tags": [
          "Voucher"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Voucher"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Voucher"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Voucher"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Voucher"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Voucher/validate": {
      "get": {
        "tags": [
          "Voucher"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Voucher/{id}/incrementUsage": {
      "put": {
        "tags": [
          "Voucher"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Warehouse": {
      "post": {
        "tags": [
          "Warehouse"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Warehouse"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Warehouse"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Warehouse"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "Warehouse"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Warehouse/{id}": {
      "get": {
        "tags": [
          "Warehouse"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Warehouse"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Warehouse"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Warehouse"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Warehouse"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Warehouse"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Warehouse/with-distance": {
      "get": {
        "tags": [
          "Warehouse"
        ],
        "parameters": [
          {
            "name": "userLat",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "userLng",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddRewardRequest": {
        "required": [
          "description",
          "name",
          "pointsNeeded",
          "tierRequired"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string"
          },
          "description": {
            "maxLength": 200,
            "minLength": 3,
            "type": "string"
          },
          "pointsNeeded": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "tierRequired": {
            "minLength": 1,
            "pattern": "Bronze|Silver|Gold",
            "type": "string"
          },
          "imageFile": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Address": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "unitNo": {
            "type": "string",
            "nullable": true
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Admin": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApproveDeliveryAgentRequest": {
        "required": [
          "approved"
        ],
        "type": "object",
        "properties": {
          "approved": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ApproveFulfilmentStaffRequest": {
        "required": [
          "approved"
        ],
        "type": "object",
        "properties": {
          "approved": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AssignOrderRequestDelivery": {
        "required": [
          "deliveryId"
        ],
        "type": "object",
        "properties": {
          "deliveryId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Cart": {
        "required": [
          "customerId"
        ],
        "type": "object",
        "properties": {
          "cartId": {
            "type": "integer",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "customers": {
            "$ref": "#/components/schemas/Customer"
          },
          "cartItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CartItem": {
        "required": [
          "cartId",
          "shoeSize"
        ],
        "type": "object",
        "properties": {
          "cartItemId": {
            "type": "integer",
            "format": "int32"
          },
          "cartId": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "shoeSize": {
            "maximum": 12,
            "minimum": 5,
            "type": "integer",
            "format": "int32"
          },
          "cart": {
            "$ref": "#/components/schemas/Cart"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          }
        },
        "additionalProperties": false
      },
      "ChangePasswordRequest": {
        "type": "object",
        "properties": {
          "currentPassword": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          },
          "confirmPassword": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "points": {
            "type": "integer",
            "format": "int32"
          },
          "tier": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "is2FAEnabled": {
            "type": "boolean"
          },
          "twoFactorSecret": {
            "type": "string",
            "nullable": true
          },
          "otpFailedAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "otpLockoutEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "passwordResetToken": {
            "type": "string",
            "nullable": true
          },
          "passwordResetTokenExpiry": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Order"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeliveryAgentDTO": {
        "type": "object",
        "properties": {
          "agentId": {
            "type": "integer",
            "format": "int32"
          },
          "vehicleNumber": {
            "type": "string",
            "nullable": true
          },
          "availabilityStatus": {
            "type": "boolean"
          },
          "vehicleType": {
            "type": "string",
            "nullable": true
          },
          "staffId": {
            "type": "integer",
            "format": "int32"
          },
          "deliveryId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DeliveryStatus": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "ForgotPasswordRequest": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FulfilmentStaff": {
        "type": "object",
        "properties": {
          "fulfilStaffId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "assignedArea": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "warehouseId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "staffId": {
            "type": "integer",
            "format": "int32"
          },
          "orderId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "assignedOrdersCount": {
            "type": "integer",
            "format": "int32"
          },
          "onBreak": {
            "type": "boolean"
          },
          "warehouse": {
            "$ref": "#/components/schemas/Warehouse"
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "staff": {
            "$ref": "#/components/schemas/Staff"
          }
        },
        "additionalProperties": false
      },
      "GiftRewardRequest": {
        "type": "object",
        "properties": {
          "recipientUsername": {
            "type": "string",
            "nullable": true
          },
          "originalCustomerId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "JobApplicant": {
        "required": [
          "contactNumber",
          "fullName",
          "jobRoleApplied",
          "nric",
          "status",
          "userId"
        ],
        "type": "object",
        "properties": {
          "applicantId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "jobRoleApplied": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "fullName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "nric": {
            "maxLength": 12,
            "minLength": 1,
            "type": "string"
          },
          "contactNumber": {
            "maxLength": 15,
            "minLength": 1,
            "type": "string"
          },
          "preferredAssignedArea": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "preferredWarehouse": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "resumeFileName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "vehicleNumber": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "vehicleType": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "availabilityStatus": {
            "type": "boolean",
            "nullable": true
          },
          "postalCode": {
            "maxLength": 6,
            "type": "string",
            "nullable": true
          },
          "vehicleOwnership": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "ownerFullName": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "driverLicenseFileName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "vehicleRegistrationCertificate": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "status": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Order": {
        "required": [
          "customerId",
          "orderDate",
          "orderStatus",
          "subtotal",
          "totalAmount"
        ],
        "type": "object",
        "properties": {
          "orderId": {
            "type": "integer",
            "format": "int32"
          },
          "orderDate": {
            "type": "string",
            "format": "date-time"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "orderStatus": {
            "$ref": "#/components/schemas/OrderStatus"
          },
          "fulfilmentStaffId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "subtotal": {
            "type": "number",
            "format": "double"
          },
          "discount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "shippingFee": {
            "type": "number",
            "format": "double"
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "shippingAddressId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "contactNumber": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "voucherId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "voucher": {
            "$ref": "#/components/schemas/Voucher"
          },
          "paymentId": {
            "type": "integer",
            "format": "int32"
          },
          "payment": {
            "$ref": "#/components/schemas/Payment"
          },
          "orderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderItem": {
        "required": [
          "orderId",
          "price",
          "productId",
          "quantity",
          "shoeSize"
        ],
        "type": "object",
        "properties": {
          "orderItemId": {
            "type": "integer",
            "format": "int32"
          },
          "orderId": {
            "type": "integer",
            "format": "int32"
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "shoeSize": {
            "maximum": 12,
            "minimum": 5,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OrderStatus": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "OtpVerificationRequest": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PasswordRequest": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Payment": {
        "required": [
          "amount",
          "cardNumber",
          "cvv",
          "expiryDate",
          "paymentStatus"
        ],
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "integer",
            "format": "int32"
          },
          "paymentStatus": {
            "$ref": "#/components/schemas/PaymentStatus"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "cardNumber": {
            "minLength": 1,
            "type": "string"
          },
          "expiryDate": {
            "minLength": 1,
            "type": "string"
          },
          "cvv": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PaymentStatus": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Product": {
        "required": [
          "color",
          "description",
          "image",
          "imageFile2",
          "imageFile3",
          "price"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 500,
            "minLength": 3,
            "type": "string"
          },
          "price": {
            "maximum": 99999.99,
            "minimum": 0.01,
            "type": "number",
            "format": "double"
          },
          "image": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string"
          },
          "imageFile2": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string"
          },
          "imageFile3": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string"
          },
          "threeJsFile": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "color": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "amtSold": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "views": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProductCategory": {
        "required": [
          "category"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "category": {
            "maxLength": 20,
            "minLength": 3,
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "RedeemedRewardDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "pointsUsed": {
            "type": "integer",
            "format": "int32"
          },
          "redeemedAt": {
            "type": "string",
            "format": "date-time"
          },
          "imageFile": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "isGifted": {
            "type": "boolean"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          }
        },
        "additionalProperties": false
      },
      "RedeemedRewardRequest": {
        "required": [
          "description",
          "name",
          "pointsUsed"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string"
          },
          "pointsUsed": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "imageFile": {
            "type": "string",
            "nullable": true
          },
          "isGifted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "RewardDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "pointsNeeded": {
            "type": "integer",
            "format": "int32"
          },
          "tierRequired": {
            "type": "string",
            "nullable": true
          },
          "imageFile": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          }
        },
        "additionalProperties": false
      },
      "Staff": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Stock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "size5": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "size6": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "size7": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "size8": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "size9": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "size10": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "size11": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "size12": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateRewardRequest": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 200,
            "minLength": 3,
            "type": "string",
            "nullable": true
          },
          "pointsNeeded": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tierRequired": {
            "pattern": "Bronze|Silver|Gold",
            "type": "string",
            "nullable": true
          },
          "imageFile": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 100,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "password": {
            "maxLength": 100,
            "minLength": 6,
            "type": "string",
            "nullable": true
          },
          "points": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tier": {
            "pattern": "Bronze|Silver|Gold",
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UploadResponse": {
        "type": "object",
        "properties": {
          "filename": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VerifyOtpRequest": {
        "type": "object",
        "properties": {
          "otp": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Voucher": {
        "required": [
          "code",
          "createdByStaffId",
          "discountPercentage",
          "expiryDate",
          "isActive",
          "maxUsage",
          "usageCount"
        ],
        "type": "object",
        "properties": {
          "voucherId": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "maxLength": 30,
            "minLength": 5,
            "type": "string"
          },
          "discountPercentage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean"
          },
          "maxUsage": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "usageCount": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "createdByStaffId": {
            "type": "integer",
            "format": "int32"
          },
          "lastUpdatedByStaffId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Warehouse": {
        "required": [
          "capacity"
        ],
        "type": "object",
        "properties": {
          "warehouseId": {
            "type": "integer",
            "format": "int32"
          },
          "capacity": {
            "type": "integer",
            "format": "int32"
          },
          "warehouseName": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "address": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Token",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}